<?xml version="1.0" encoding="iso-8859-1" standalone="yes" ?>
<otawa-script xmlns:xsl="http://www.w3.org/1999/XSL/Transform">

<name>Star12X</name>

<info>
<p>

<h1>Description</h1>
This script is dedicated to the Star12X processor family from FreeScale
with the code only stored in flash memory.
</p>

<h1>CodeWarrior Compiler</h1>
<p>
To use this script with a code generated by the CodeWarrior Compiler, you must define the
options: <code>-CswMinLB9999</code>, <code>-CswMinSLB9999</code> and <code>-OnB=a</code>.
These options prevents the compiler to generated code not supported by OTAWA.
</p> 

</info>

<configuration>
	<item name="noreturn" type="bool" default="true" label="main function is never returning">
		<help>Some compilers, like CodeWarrior, assumes that the main is never returning and
		the return would cause execution of non-code bytes. As this situation confuses OTAWA,
		this option prevents any return from the main function.</help>
	</item>
	<item name="delta" type="bool" default="true" label="analyze inter-block effects">
		<help>This option makes the computed WCET more precise by analyzing timing
		between basic block, mainly due to branch effects.
		On a S12X, a branch instruction takes two more cycles if it is taken.</help>
	</item>
	<item name="virtual" type="bool" default="false" label="function call virtualization">
		<help>Cause the function call to be replaced by inlining the function body.
		Improve the precision of the WCET but may augment the computation time.</help>
	</item>
	<item name="verbose" type="bool" default="false" label="verbose messages">
		<help>Display verbose messages during the analysis.</help>
	</item>
	<item name="cw" type="bool" default="false" label="CodeWarrior lib">
		<help>Set this option if you are using CodeWarrior compiler to get
		automatically some bounds for the emulation function for unsupported operators.</help> 
	</item>
</configuration>

<xsl:if test="$noreturn!=0">
	<flowfacts>
		<noreturn label="main"/>
	</flowfacts>
</xsl:if>

<xsl:if test="$cw!=0">
	<flowfacts>
	<return label="_LDIVU" offset="0xc"/>
        <return label="_LCMP" offset="0x8"/>
        <return label="_LMUL" offset="0x25"/>
        <return label="_LDIVS" offset="0x32"/>
        <noreturn label="main"/>

        <function name="_lDivMod">
                <loop offset="0x39" maxcount="14"/>
        </function>
        
        <function name="_ISHRU">
                <loop offset="0x6" maxcount="7"/>
        </function>
        
        <function name="_ISHRS">
                <loop offset="0x6" maxcount="7"/>
        </function>
        
        <function name="_LSHRU">
                <loop offset="0x6" maxcount="7"/>
        </function>
        
        <function name="_LSHL">
                <loop offset="0x6" maxcount="7"/>
        </function>
        
        <function name="_LSHRS">
                <loop offset="0x6" maxcount="7"/>
        </function>
	</flowfacts>
</xsl:if>

<script>
	<xsl:if test="$verbose!=0">
		<config name="otawa::Processor::VERBOSE" value="true"/>
	</xsl:if>	
	<xsl:if test="$virtual!=0">
		<step processor="otawa::Virtualizer"/>
	</xsl:if>
	<step processor="otawa::ipet::BBTimeSimulator"/>
	<xsl:if test="$delta!=0">
		<step processor="otawa::ipet::Delta"/>
	</xsl:if>
	<step processor="otawa::ipet::WCETComputation">
		<config name="otawa::ipet::PIPELINE_DEPTH" value="{$stages}"/>
	</step>
</script>

</otawa-script>
